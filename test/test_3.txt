%union {
    char* a;
    char* b;
    Node* a;
}

<dawd> : <awdawd>  | <awdaW> <daw> | <daw> <dawdaw> | <dawd>
;

<awd> : <Daw>
;

<exp> : <exp> '+' <exp> {
   Kek();
      Print("Hello world\n");
  }   
    | <exp> '-' <exp> 
    | <exp> '*' <exp> { awdawd awd awd awd awd awd awdaw;
    Print("World hello");
    KUK();}
    | <exp> '(' <exp> ')'
;

<cycle> : <OK> {
  for (size_t i = 0; i < n; ++i) {
    std::cout << "Hello";
  }
}
;

<MoreDepend> : <B> | <f> <F> <f> {d} | <A> <B> <C> <D> <E> <G> <W> {d

}
;

<MoreBranch> : <A>
    | <B>
    | <C>
    | <D>
    | <G>
    | <W>
    | <E>
    | <V>
;